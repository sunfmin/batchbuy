// Generated by github.com/hypermusk/hypermusk
// DO NOT EDIT

(function(api, $, undefined ) {
	api.rpc = function(endpoint, input, callback) {
		var methodUrl = api.baseurl + endpoint;
		var message = JSON.stringify(input);
		var req = $.ajax({
			type: "POST",
			url: methodUrl,
			contentType:"application/json; charset=utf-8",
			dataType:"json",
			processData: false,
			data: message
		});
		req.done(function(data, textStatus, jqXHR) {
			callback(data);
		});
	};
	api.rpcjsonp = function(endpoint, input, callback) {
		var methodUrl = api.baseurl + endpoint;
		var message = JSON.stringify(input);
		var req = $.ajax({
			type: "GET",
			url: methodUrl,
			crossDomain: true,
			contentType:"application/javascript; charset=utf-8",
			dataType:"jsonp",
			data: "data="+message
		});
		req.done(function(data, textStatus, jqXHR) {
			callback(data);
		});
	};
})( window.api = window.api || {}, jQuery);



(function( api, undefined ) {
	api.jsonp = {}

	api.Service = function() {};
	api.jsonp.Service = function() {};

	api.Service.prototype.PutProduct = function(id, input, callback) {
		api.rpc("/Service/PutProduct.json", {"This": this, "Params": { "Id": id, "Input": input }}, function(data){
			callback(data.Product, data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.PutProduct = function(id, input, callback) {
		api.rpcjsonp("/Service/PutProduct.json", {"This": this, "Params": { "Id": id, "Input": input }}, function(data){
			callback(data.Product, data.Err)
		});
		return;
	};

	api.Service.prototype.RemoveProduct = function(id, callback) {
		api.rpc("/Service/RemoveProduct.json", {"This": this, "Params": { "Id": id }}, function(data){
			callback(data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.RemoveProduct = function(id, callback) {
		api.rpcjsonp("/Service/RemoveProduct.json", {"This": this, "Params": { "Id": id }}, function(data){
			callback(data.Err)
		});
		return;
	};

	api.Service.prototype.PutUser = function(email, input, callback) {
		api.rpc("/Service/PutUser.json", {"This": this, "Params": { "Email": email, "Input": input }}, function(data){
			callback(data.User, data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.PutUser = function(email, input, callback) {
		api.rpcjsonp("/Service/PutUser.json", {"This": this, "Params": { "Email": email, "Input": input }}, function(data){
			callback(data.User, data.Err)
		});
		return;
	};

	api.Service.prototype.RemoveUser = function(email, callback) {
		api.rpc("/Service/RemoveUser.json", {"This": this, "Params": { "Email": email }}, function(data){
			callback(data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.RemoveUser = function(email, callback) {
		api.rpcjsonp("/Service/RemoveUser.json", {"This": this, "Params": { "Email": email }}, function(data){
			callback(data.Err)
		});
		return;
	};

	api.Service.prototype.PutOrder = function(date, email, productId, count, callback) {
		api.rpc("/Service/PutOrder.json", {"This": this, "Params": { "Date": date, "Email": email, "ProductId": productId, "Count": count }}, function(data){
			callback(data.Order, data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.PutOrder = function(date, email, productId, count, callback) {
		api.rpcjsonp("/Service/PutOrder.json", {"This": this, "Params": { "Date": date, "Email": email, "ProductId": productId, "Count": count }}, function(data){
			callback(data.Order, data.Err)
		});
		return;
	};

	api.Service.prototype.RemoveOrder = function(date, email, productId, callback) {
		api.rpc("/Service/RemoveOrder.json", {"This": this, "Params": { "Date": date, "Email": email, "ProductId": productId }}, function(data){
			callback(data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.RemoveOrder = function(date, email, productId, callback) {
		api.rpcjsonp("/Service/RemoveOrder.json", {"This": this, "Params": { "Date": date, "Email": email, "ProductId": productId }}, function(data){
			callback(data.Err)
		});
		return;
	};

	api.Service.prototype.ProductListOfDate = function(date, callback) {
		api.rpc("/Service/ProductListOfDate.json", {"This": this, "Params": { "Date": date }}, function(data){
			callback(data.Products, data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.ProductListOfDate = function(date, callback) {
		api.rpcjsonp("/Service/ProductListOfDate.json", {"This": this, "Params": { "Date": date }}, function(data){
			callback(data.Products, data.Err)
		});
		return;
	};

	api.Service.prototype.OrderListOfDate = function(date, callback) {
		api.rpc("/Service/OrderListOfDate.json", {"This": this, "Params": { "Date": date }}, function(data){
			callback(data.Orders, data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.OrderListOfDate = function(date, callback) {
		api.rpcjsonp("/Service/OrderListOfDate.json", {"This": this, "Params": { "Date": date }}, function(data){
			callback(data.Orders, data.Err)
		});
		return;
	};

	api.Service.prototype.MyAvaliableProducts = function(date, email, callback) {
		api.rpc("/Service/MyAvaliableProducts.json", {"This": this, "Params": { "Date": date, "Email": email }}, function(data){
			callback(data.Products, data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.MyAvaliableProducts = function(date, email, callback) {
		api.rpcjsonp("/Service/MyAvaliableProducts.json", {"This": this, "Params": { "Date": date, "Email": email }}, function(data){
			callback(data.Products, data.Err)
		});
		return;
	};

	api.Service.prototype.MyOrders = function(date, email, callback) {
		api.rpc("/Service/MyOrders.json", {"This": this, "Params": { "Date": date, "Email": email }}, function(data){
			callback(data.Orders, data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.MyOrders = function(date, email, callback) {
		api.rpcjsonp("/Service/MyOrders.json", {"This": this, "Params": { "Date": date, "Email": email }}, function(data){
			callback(data.Orders, data.Err)
		});
		return;
	};

	api.Service.prototype.Top3PopularProducts = function(date, callback) {
		api.rpc("/Service/Top3PopularProducts.json", {"This": this, "Params": { "Date": date }}, function(data){
			callback(data.Products, data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.Top3PopularProducts = function(date, callback) {
		api.rpcjsonp("/Service/Top3PopularProducts.json", {"This": this, "Params": { "Date": date }}, function(data){
			callback(data.Products, data.Err)
		});
		return;
	};

	api.Service.prototype.MyTop3FavouriteProducts = function(email, date, callback) {
		api.rpc("/Service/MyTop3FavouriteProducts.json", {"This": this, "Params": { "Email": email, "Date": date }}, function(data){
			callback(data.Products, data.Err)
		});
		return;
	};
	api.jsonp.Service.prototype.MyTop3FavouriteProducts = function(email, date, callback) {
		api.rpcjsonp("/Service/MyTop3FavouriteProducts.json", {"This": this, "Params": { "Email": email, "Date": date }}, function(data){
			callback(data.Products, data.Err)
		});
		return;
	};


}( window.api = window.api || {} ));

